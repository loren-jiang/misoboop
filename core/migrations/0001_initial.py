# Generated by Django 2.2.12 on 2020-04-30 02:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import misoboop.storage_backends
import sorl.thumbnail.fields
import taggit.managers
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('filterable', models.BooleanField(default=False)),
                ('shown', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='PublicImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('description', tinymce.models.HTMLField(blank=True, default='', null=True, verbose_name='Text')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('upload', sorl.thumbnail.fields.ImageField(upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedWhatever',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_taggedwhatever_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_taggedwhatever_items', to='core.BasicTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=500, unique=True)),
                ('description', tinymce.models.HTMLField(default='', verbose_name='Text')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='core.TaggedWhatever', to='core.BasicTag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Series',
                'verbose_name_plural': 'Seriess',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PrivateImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('description', tinymce.models.HTMLField(blank=True, default='', null=True, verbose_name='Text')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('upload', sorl.thumbnail.fields.ImageField(storage=misoboop.storage_backends.PrivateMediaStorage, upload_to='')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
